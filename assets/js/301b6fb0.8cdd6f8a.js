"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[30972],{18535:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var o=n(87462),i=n(63366),r=(n(67294),n(3905)),a=["components"],l={image:"/img/integration-services/logo/integration_services.png",description:"This section will guide you in setting up the Integration Service API using Docker Compose.",keywords:["how to","docker compose","setup API","configure","mongo-init.js",".env"]},s="Local Setup",c={unversionedId:"getting_started/installation/docker_compose_setup",id:"getting_started/installation/docker_compose_setup",title:"Local Setup",description:"This section will guide you in setting up the Integration Service API using Docker Compose.",source:"@site/content/build/integration-services/production/documentation/docs/getting_started/installation/docker_compose_setup.md",sourceDirName:"getting_started/installation",slug:"/getting_started/installation/docker_compose_setup",permalink:"/integration-services/getting_started/installation/docker_compose_setup",draft:!1,editUrl:"https://github.com/iotaledger/integration-services/edit/develop/documentation/content/build/integration-services/production/documentation/docs/getting_started/installation/docker_compose_setup.md",tags:[],version:"current",frontMatter:{image:"/img/integration-services/logo/integration_services.png",description:"This section will guide you in setting up the Integration Service API using Docker Compose.",keywords:["how to","docker compose","setup API","configure","mongo-init.js",".env"]},sidebar:"docs",previous:{title:"Configuration",permalink:"/integration-services/getting_started/installation/kubernetes/configuration"},next:{title:"Concept",permalink:"/integration-services/basics/authentication/concept"}},p={},u=[{value:"Requirements",id:"requirements",level:2},{value:"Download the Project",id:"download-the-project",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Run Integration Services API",id:"run-integration-services-api",level:2},{value:"Test your API",id:"test-your-api",level:2},{value:"Check Container",id:"check-container",level:3},{value:"Check Endpoints",id:"check-endpoints",level:3},{value:"Dashboard",id:"dashboard",level:2},{value:"FAQ",id:"faq",level:2}],d={toc:u};function g(e){var t=e.components,n=(0,i.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"local-setup"},"Local Setup"),(0,r.kt)("p",null,"This section will guide you in setting up the Integration Services API using Docker Compose."),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"Please make sure to have the following dependencies installed before continuing:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-docker/"},"docker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/compose/install/"},"docker-compose")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://nodejs.org/"},"node.js")," min. v15.6.0"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"},"Git"))),(0,r.kt)("h2",{id:"download-the-project"},"Download the Project"),(0,r.kt)("p",null,"Clone the project by running the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/iotaledger/integration-services.git\n")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Use the Integration Services CLI to configure the API. The CLI configures your ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"mongo-init.json")," files."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Navigate to the root folder:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd integration-services\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Configure the API:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx @iota/is-cli@latest setup-docker\n")),(0,r.kt)("h2",{id:"run-integration-services-api"},"Run Integration Services API"),(0,r.kt)("p",null,"You can start the Integration Services API by running the following commands in the same root directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose --env-file .env up --build\n")),(0,r.kt)("p",null,"It is totally normal to see ",(0,r.kt)("inlineCode",{parentName:"p"},"error : No root identity found!")," while the containers are starting up. After startup there should be no remaining errors.\nNow you are done with the docker-compose setup. To make sure that everything works as expected read the next section."),(0,r.kt)("h2",{id:"test-your-api"},"Test your API"),(0,r.kt)("p",null,"By following this section you can check if the installation was successful."),(0,r.kt)("h3",{id:"check-container"},"Check Container"),(0,r.kt)("p",null,"First we want to test if all docker container started up correctly."),(0,r.kt)("p",null,"List all container:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose ps\n")),(0,r.kt)("p",null,"You should be able to see all container except ",(0,r.kt)("inlineCode",{parentName:"p"},"api_initialize-audit-trail_1")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"api_initialize-ssi-bridge_1")," in a ",(0,r.kt)("inlineCode",{parentName:"p"},"Up")," state."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"                       Name                                     Command               State                       Ports                    \n-------------------------------------------------------------------------------------------------------------------------------------------\nintegration-services_audit-trail-gw_1                       docker-entrypoint.sh node  ...   Up       3000/tcp                                    \nintegration-services_initialize-audit-trail_1               docker-entrypoint.sh node  ...   Exit 0                                               \nintegration-services_initialize-ssi-bridge_1                docker-entrypoint.sh node  ...   Exit 0                                               \nintegration-services_ssi-bridge_1                           docker-entrypoint.sh node  ...   Up       3000/tcp                                    \nis-dashboard                                                docker-entrypoint.sh npm r ...   Up       0.0.0.0:3055->3000/tcp                      \nmongo                                                       docker-entrypoint.sh mongod      Up       0.0.0.0:27017->27017/tcp                    \ntraefik                                                     /entrypoint.sh --api.insec ...   Up       0.0.0.0:3000->80/tcp, 0.0.0.0:8080->8080/tcp\n")),(0,r.kt)("h3",{id:"check-endpoints"},"Check Endpoints"),(0,r.kt)("p",null,"Now you can check if you can reach the ",(0,r.kt)("inlineCode",{parentName:"p"},"audit-trail-gw")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ssi-brdige")," via http by running the following commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl http://localhost:3000/audit-trail-gw/info\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl http://localhost:3000/ssi-bridge/info\n")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The Swagger API documentation ",(0,r.kt)("strong",{parentName:"p"},"cannot")," be reached currently. This issue will be fixed in a future release."))),(0,r.kt)("h2",{id:"dashboard"},"Dashboard"),(0,r.kt)("p",null,"We also supply a dashboard with the Integration Services. You can reach the dashboard in your browser via:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"http://localhost:3000\n")),(0,r.kt)("h2",{id:"faq"},"FAQ"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Im getting errors like ",(0,r.kt)("inlineCode",{parentName:"em"},"error : could not connect to mongodb")," and  ",(0,r.kt)("inlineCode",{parentName:"em"},"error : MongoError: Authentication failed.")," when setting up the container."))),(0,r.kt)("p",null,"Please make sure to delete all old MongoDB containers in your Integration Services installation you created earlier.\n-> All data in your local database will be lost ",(0,r.kt)("br",null),"\n-> Stop the container: ",(0,r.kt)("inlineCode",{parentName:"p"},"docker stop mongo")," and delete it ",(0,r.kt)("inlineCode",{parentName:"p"},"docker rm -v  mongo")))}g.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var o=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),g=i,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||r;return n?o.createElement(m,a(a({ref:t},p),{},{components:n})):o.createElement(m,a({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);